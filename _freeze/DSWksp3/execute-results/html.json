{
  "hash": "3f650a12bd02b78344f97ff411b83937",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"URISE Workshop: Data Analysis\"\nwebr:\n  channel-type: 'automatic'\n  packages: [\"ggplot2\", \"dplyr\", \"tidyr\", \"MASS\", \"patchwork\"]\nfilters:\n  - webr\n---\n\n\nIn this tutorial, we will be walking through how to use Linear Discriminant Analysis to predict whether towns are at high risk of an outbreak of swine flu (H1N1). NOTE: These are not real data on H1N1.\n\nMake sure to click \"Run Code\" in all the interactive code chunks to make sure this tutorial will work.\n\nSome early set up for our data (aka data manipulation steps). Don't worry about this code, just run the chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH1N1 <- iris\n\ncolnames(H1N1) <- c(\"Vaccination_Availability\", \"Travel_Metric\",\n                 \"Dist_Nearest_Outbreak\", \"Medical_Awareness_Metric\", \n                 \"Risk\")\n\nH1N1$Risk <- as.character(H1N1$Risk)\nH1N1[H1N1$Risk == \"setosa\",]$Risk <- \"High\"\nH1N1[H1N1$Risk == \"versicolor\",]$Risk <- \"Mid\"\nH1N1[H1N1$Risk == \"virginica\",]$Risk <- \"Low\"\n\nH1N1$Risk <- factor(H1N1$Risk, levels = c(\"Low\", \"Mid\", \"High\"))\n\n\nH1N1[1:4] <- scale(H1N1[1:4])\n\nset.seed(80085)\nsample <- sample(c(TRUE, FALSE), nrow(H1N1), replace = TRUE, prob = c(0.7, 0.3))\nH1N1_known <- H1N1[sample, ]\nH1N1_unknown <- H1N1[!sample, ]\n```\n:::\n\n\n## What is Machine Learning Classification?\n\nMachine learning, in terms of classification, refers to a type of supervised learning where the algorithm learns to categorize data into predefined classes or labels. The goal of a classification model is to predict the class or category of new, unseen data based on patterns learned from a labeled dataset during training.\n\nThis has valuable applications in many fields, including health fields where it is used to:\n\n-   generate personalized treatment plans\n-   predict side effects\n-   have computers visually identify cancerous tumors\n-   identify at-risk populations\n-   predict the spread of disease\n\n## Linear Discriminant Analysis (LDA)\n\nLinear Discriminant Analysis (LDA) is a popular technique used in machine learning for classification and dimensionality reduction when working with linearly separable variables. LDA is primarily used to classify data into groups by finding a linear combination of variables that best separates the groups. It projects the data onto a lower-dimensional space where separation between classes is maximized.\n\n## Our scenario: H1N1 Swine Flu\n\nSwine influenza is a respiratory disease of pigs cause by type A influenza viruses. In the 2009-10 flu season, a new H1N1 virus began causing illness in humans. It resulted in a pandemic that caused an estimate 284,400 deaths worldwide.\n\n![](images/clipboard-3381274812.png)\n\n*Figure 1. Symptoms of Swine Flu (Wikipedia)*\n\n**2024-2025 Season Outbreak**\n\nFor the purposes of this exercise, we are going to imagine that the 2024-2025 flu season has also seen an outbreak of H1N1 that can infect humans. Epidemiologists would like to notify towns that are at high risk of seeing an outbreak to be extra cautious, but first they need to identify which towns are at high risk. They have gathered a data set of towns that have already been potentially exposed (H1N1_known) where they measured a number of variables that likely influence susceptibility of outbreak and classified the towns as high, mid, or low risk.\n\nThe variables they measured are:\n\n-   Vaccination_Availability: this is a scaled measure of the availability of flu vaccinations in each town. Generally, towns with lower availability of vaccinations will be at higher risk of flu outbreaks.\n\n-   Travel_Metric: this is a scaled measure of the amount of travel in and out of the town. Generally, towns that have a lot of folks coming and going are more likely to get exposed to new viruses.\n\n-   Dist_Nearest_Outbreak: this is a scaled measure of how far the town is from the nearest outbreak of H1N1. Towns in closer proximity to other towns that have already had an outbreak are generally at higher risk of experiencing an outbreak.\n\n-   Medical_Awareness_Metric: this is a scaled measure of the culture around medical awareness and safety in the town. Generally towns with a higher value of this metric will be more aware of common flu avoidance measures, such as frequent hand washing, vaccination, etc.\n\n## Step 1: Take a look at our data\n\nRun the code chunk below to take a quick look at our data of known town risks:\n\n```{webr-r}\n#take a look at a summary of our data\nglimpse(H1N1_known)\n\n```\n\nRun the code chunk below to print a few plots of our known data (NOTE: the final line of this code works because of my favorite package - patchwork - it's amazing for making multi-panel plots):\n\n```{webr-r}\n#make a plot showing all variables across Risk Type\np1 <- ggplot(H1N1_known, aes(x = Risk, y = Vaccination_Availability,\n                             color = Risk, fill = Risk)) +\n  geom_violin(alpha = 0.2) +\n  geom_jitter(width = 0.15, alpha = 0.5) +\n  theme_bw()\n\np2 <- ggplot(H1N1_known, aes(x = Risk, y = Travel_Metric,\n                             color = Risk, fill = Risk)) +\n  geom_violin(alpha = 0.2) +\n  geom_jitter(width = 0.1, alpha = 0.5) +\n  theme_bw()\n\np3 <- ggplot(H1N1_known, aes(x = Risk, y = Dist_Nearest_Outbreak,\n                             color = Risk, fill = Risk)) +\n  geom_violin(alpha = 0.2) +\n  geom_jitter(width = 0.1, alpha = 0.5) +\n  theme_bw()\n\np4 <- ggplot(H1N1_known, aes(x = Risk, y = Medical_Awareness_Metric,\n                             color = Risk, fill = Risk)) +\n  geom_violin(alpha = 0.2) +\n  geom_jitter(width = 0.1, alpha = 0.5) +\n  theme_bw()\n\np1 + p2 + p3 + p4 + plot_layout(guides = \"collect\")\n```\n\nWe can see some basic trends in the data, but it would be hard to classify new towns based on looking at any of these metrics in isolation. They all have some overlap. Using LDA, we might be able to classify towns using all of the variables combined and do a better job predicting which ones are at high risk of an outbreak.\n\n## Step 2: Run the LDA\n\nWe will use the lda() function in the MASS package to fit the LDA model to our data:\n\n```{webr-r}\n#fit the model\nriskmodel <- lda(Risk~., data = H1N1_known)\n\n#view model output\nriskmodel\n```\n\nHere is how to interpret the output of the model:\n\n**Prior probabilities of group:** These represent the proportions of each Risk group in the training set. For example, 30.8% of all towns in the training set were at high risk of an outbreak.\n\n**Group means:** These display the mean values for each predictor variable for each risk level.\n\n**Coefficients of linear discriminants:** These display the linear combination of predictor variables that are used to form the decision rule of the LDA model. For example:\n\n-   **LD1:** .792\\*Sepal.Length + .571\\*Sepal.Width – 4.076\\*Petal.Length – 2.06\\*Petal.Width\n\n-   **LD2:** .529\\*Sepal.Length + .713\\*Sepal.Width – 2.731\\*Petal.Length + 2.63\\*Petal.Width\n\n**Proportion of trace:** These display the percentage separation achieved by each linear discriminant function.\n\n*Questions about implementing this tutorial? Contact Kayla Blincow at kaylamblincow\\@gmail.com*.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}