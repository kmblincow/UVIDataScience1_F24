{
  "hash": "9f9f86ca62eb5b592d75e99905bf2f6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 3: Data Visualization Part 1\"\nwebr:\n  channel-type: 'automatic'\n  packages: [\"ggplot2\", \"medicaldata\", \"dplyr\", \"tidyr\"]\nfilters:\n  - webr\n---\n\n\nIn this tutorial, we will introduce some reasons why data visualization is a critical aspect of data science and demonstrate the basics of creating effective data visualizations in R using ggplot2.\n\nThe code chunk below sets up our coding environment. You will see I use the library() function to call packages. Packages are add ons you can load into R that include specialized functions. For example, ggplot2 is a package with functions that give us a lot of flexibility in creating data visualizations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(dplyr) #package with useful data manipulation functions\nlibrary(ggplot2) #package allowing us to make plots\nlibrary(medicaldata) #package containing our data\n```\n:::\n\n\n## Why is data visualization important?\n\nWhen we consider the data science workflow (Fig. 1), there is not a step that explicitly says \"data visualization\". This is because data visualization is so essential that it occurs throughout the entire process!\\\n![Figure 1. Data science life cycle. (Drawn by Chanin Nantasenamat in collaboration with Ken Jee)](images/DataScienceProcess.png)\n\n*Figure 1. Data science life cycle. (Drawn by Chanin Nantasenamat in collaboration with Ken Jee; [Source Article](https://towardsdatascience.com/the-data-science-process-a19eb7ebc41b))*\n\nAt its core, data visualization is used to simplify complex data. Data scientists often work with very large data sets (think millions of rows) and it is exceedingly difficult to conceptualize those data when interacting with them in table form. Using data visualization techniques, data scientists are able to:\n\n-   identify (sometimes unexpected) patterns and trends in data\n-   identify errors or weirdnesses in data\n-   establish expectations for relationships in data to inform understanding of analysis results\n-   communicate the results of their efforts to others\n\nYour first step is ALWAYS to visualize your data!\n\n## Data visualization in R\n\nThere are a number of different tools that can aid in visualizing data in the R environment. Below is a selection of some of the tools available.\n\n-   **ggplot2**: A powerful and flexible plotting package based on the grammar of graphics, allowing for the creation of complex multi-layered plots with consistent syntax.\n-   **base R**: The default plotting system in R, offering simple and straightforward functions for plotting with basic customization options. (I often use base R plots for quick exploratory visualizations).\n-   **plotly**: An interactive graphing package that builds on ggplot2, allowing users to create dynamic, web-based interactive visualizations. For example, you can have a plot display a written value when hovering over a data point.\n-   **shiny**: A web application framework for R that allows users to create interactive web apps with reactive elements, including dynamic and responsive plots. This is a common tool for creating interactive data dashboards in R.\n\nYou are encouraged to explore these tools and others, but for the purposes of this lab, we will be focusing on ggplot2. You can find additional information on the ggplot2 package [here](https://ggplot2.tidyverse.org/).\n\n## Our data set: James Lind's scurvy study\n\nScurvy was a common affliction among sailors in the 1700s. James Lind's scurvy dataset includes information on the severity of symptoms of twelve scurvy patients after being treated with one of the following remedies: cider, dilute sulfuric acide, sea water, vinegar, citrus, and purgative mixture. These data are included in the medicaldata package in R and were originally published in James Lind's *A Treatise on the Scurvy in Three Parts* in 1757.\n\n\\\n**Arrrr, Ye Got Scurvy Mate?**\n\n![](images/clipboard-3292047881.png) ![](images/clipboard-1524364916.png){width=\"350\"}\n\nRun the code chunk below to load the data and take a quick look at it.\n\n```{webr-r}\n#create an object called scurvy containing our data\nscurvy <- scurvy\n\n#print the first six rows of the data\nhead(scurvy)\n\n```\n\n```{webr-r}\n#print the column names from the data set\ncolnames(scurvy)\n```\n\nYou can see the data includes information on the patient id (study_id), treatment, dosing regimen, severity of symptoms, and whether the sailors were fit for duty after treatment.\n\nHowever, looking at the data this way, we can't really discern patterns that might exist. For example, which treatment seemed to reduce the severity of symptoms? Which treatment was associated with the lowest severity of gum rot overall?\n\nBy visualizing the data we can find answers to these questions and more!\n\n## Let's visualize some data!\n\nIn this section we will demonstrate how to make a visualization using ggplot2.\n\nFor this first example, each line of code includes a comment (denoted by #) that describes what that line is doing. In general, it's good practice to go line by line in code you receive to ensure you fully understand what it's doing.\n\nIn the exercise code chunks, you will be required to fill in the missing code (denoted by #FILLMEIN) to create the visualization.\n\n\\\n*Demonstration:*\\\nWe are going to start by making a plot that will show us the number of patients associated with each level of symptom severity for gum rot colored by treatment type. Spend some time looking at the code and consider what you think the resulting plot will look like before running the chunk below.\n\n```{webr-r}\n#DEMONSTRATION (RUN THIS CHUNK TO SEE WHAT IS CREATED)\n\n#create our visualization using ggplot2\nggplot( #call the ggplot function to create a plot\n  data = scurvy, #specify the object containing our data\n  mapping = #tell ggplot which parts of our data we want to use\n    aes(x = gum_rot_d6, #put bum rot on the x axis\n        fill = treatment)) + #color the fill of elements by treatment\n  geom_bar() #tell R we want a bar plot\n```\n\nDoes the resulting plot match what you expected the code to generate?\n\n*EXERCISE 1:*\n\nAdjust the code chunk below to create a plot that will show us the number of patients associated with each level of symptom severity for skin sores colored by treatment type.\n\n*(HINT: You might want to refer back to your column names to ensure you are inputting the right variable names, and don't forget about commas!)*\n\n```{webr-r}\n#EXERCISE 1\nggplot(data = #FILLMEIN\n       mapping = aes(x = #FILLMEIN\n                     fill = #FILLMEIN\n                     )) +\n  geom_bar()\n```\n\n*ANALYSIS INTERLUDE:*\n\nBased on your plots, were there more patients with sever gum rot or skin sores? Which treatment do you think is the best so far?\n\n```{webr-r}\n#WRITE YOUR ANSWER TO THE ABOVE QUESTION HERE\n\n```\n\n## Asking more scurvy questions\n\nRun the code chunks in this section to see how visualizations can help us get answers to research questions related to the penguins data set.\n\n***Research Question:*** ***Which symptom had the most severe cases?***\n\nTo answer this question it will help us if our data is in *long format*. This will allow us to have a single column for symptom, rather than each symptom having it's own column. Take a look at the output from the code chunk below and notice the changes to the data set.\n\n```{webr-r}\n#do some quick data manipulation to convert to long format \n#(we will talk about this more next week)\nscurvy_long <- pivot_longer(scurvy, \n                            cols = 4:7, \n                            names_to = \"symptom\",\n                            values_to = \"severity\")\n\n#we just created a new dataset \"scurvy_long\"\n\n#take a look at our new data\nhead(scurvy_long)\n```\n\nYou can see now all our symptom columns have been collapsed into a single column \"symptom\". This also means that our study_id, treatment, and dosing_regimen_for_scurvy columns have repeated rows for each unique symptom value.\n\nHaving the data formatted this way makes it easier to make visualizations comparing symptoms.\n\n```{webr-r}\n#which symptom had the most severe cases?\nggplot(data = scurvy_long, \n       mapping = aes(x = severity,\n                     fill = symptom)) + \n  geom_bar(position = \"dodge\", #tell R we want bars side by side, instead of stacked\n           color = \"black\") + #tell R we want a black outline around bars\n  scale_fill_viridis_d() #use a color blind friendly palette\n```\n\nBased on this figure, we can see that lassitude had the highest number of severe cases, followed by skin sores and weakness of the knees.\n\n*EXERCISE 2:*\n\nAdjust the code chunk below to create a plot that will show us which treatment type seemed to perform the best for reducing severity of scurvy symptoms.\n\n*(HINT: You might want to refer back to your column names to ensure you are inputting the right variable names, and don't forget about commas!)*\n\n```{webr-r}\n#EXERCISE 2\nggplot(data = #FILLMEIN\n       mapping = aes(x = #FILLMEIN\n                     fill = #FILLMEIN\n                     )) +\n  geom_bar(color = \"black\") +\n  scale_fill_viridis_d()\n```\n\nWhich treatment works best for treating scurvy?\n\n```{webr-r}\n#WRITE YOUR ANSWER TO THE ABOVE QUESTION HERE\n```\n\n## Adding continuous variables\n\nThe data sets we have been working with thus far have consisted solely of *categorical data (*e.g. Severity (none, mile, moderate, severe). This means that we are limited to looking at the number of observations in each category, chiefly with bar plots. *Numerical or continuous data* consists of continuous number values and opens up new possibilities for data visualization.\n\nWe are going to use a made up data set to explore how we visualize continuous data. These data will consist of observations of incidences of scurvy among ship crews. They will include data on the weight, height, and age of each sailor, whether they contracted scurvy or not, which ship they sailed on, and they year the ship was active.\n\nRun the code chunk below to generate the new data set (don't worry if you don't follow what the code is doing, we just need the data).\n\n```{webr-r}\n#generate new data set (don't worry about this, just run it)\nset.seed(80085)\nscurvy_bm <- data.frame(\n  ship = rep(\"The Black Marauder\", 15),\n  weight_kg = sort(rnorm(15, 75, 5)),\n  height_m = sort(rnorm(15, 1.7, 0.2)),\n  age = round(rnorm(15, 20, 2)),\n  scurvy = c(rep(\"N\", 4), \"Y\", \"Y\", \"N\", rep(\"Y\", 8)),\n  year = rep(1742, 15)\n)\n\nscurvy_ss <- data.frame(\n  ship = rep(\"Sea Serpent\", 18),\n  weight_kg = sort(rnorm(18, 80, 5)),\n  height_m = sort(rnorm(18, 1.7, 0.2)),\n  age = round(rnorm(18, 20, 2)),\n  scurvy = c(rep(\"N\", 3), \"Y\", \"N\", \"Y\", \"N\", rep(\"Y\", 11)),\n  year = rep(1743, 18)\n)\n\nscurvy_cc <- data.frame(\n  ship = rep(\"Crimson Corsair\", 17),\n  weight_kg = sort(rnorm(17, 77, 5)),\n  height_m = sort(rnorm(17, 1.7, 0.2)),\n  age = round(rnorm(17, 20, 2)),\n  scurvy = c(rep(\"N\", 11), \"Y\", \"Y\", rep(\"N\", 4)),\n  year = rep(1764, 17)\n)\n\nscurvy_ship <- rbind(scurvy_bm, scurvy_ss, scurvy_cc)\n```\n\nNow that we have the data you can take a quick look at it\n\n```{webr-r}\nhead(scurvy_ship)\n```\n\nNotice that weight, height, and age are all numeric values. Also scurvy incidence is coded as N for no scurvy or Y for yes scurvy.\n\n***Research Question:*** ***How does the weight of sailors differ across ships?***\n\nWe can use a box plot or violin plot to look for differences in a continuous variable (weight) across categorical variables (ship).\n\n```{webr-r}\nggplot(data = scurvy_ship,         \n       mapping = aes(x = ship,                      \n                     y = weight_kg)) +   \n  geom_boxplot()\n```\n\n```{webr-r}\nggplot(data = scurvy_ship,         \n       mapping = aes(x = ship,                      \n                     y = weight_kg)) +   \n  geom_violin()\n```\n\nBoth of these plots show us that the Sea Serpent had the heaviest sailors.\n\n\\\n***Research Question: What is the relationship between height and weight?***\n\nWe can use a scatterplot to look at the relationship of two continuous variables against each other.\n\n```{webr-r}\nggplot(data = scurvy_ship,\n       mapping = aes(x = weight_kg,\n                     y = height_m)) +\n  geom_point() #tell R we want to plot points (aka a scatter_plot)\n```\n\nUnsurprisingly, we see that weight generally increases with height.\n\n***Research Question: Does the relationship between height and weight differ across ships?***\n\nWe can use color to show whether continuous relationships differ across a categorical variable.\n\n```{webr-r}\nggplot(data = scurvy_ship,\n       mapping = aes(x = weight_kg,\n                     y = height_m,\n                     color = ship)) + #color the points by ship\n  geom_point() #tell R we want to plot points (aka a scatter_plot)\n```\n\nIt doesn't look like there is much a difference in the trend between ships, but the Sea Serpent tends to have shorter sailors than the other ships.\n\n## FINAL EXERCISE: Your turn!\n\nCreate **three visualizations** addressing the following research questions:\n\n1.  Does the incidence of scurvy seem to be related to height?\n\n2.  Does the incidence of scurvy seem to be related to age?\n\n3.  Which ship had the highest incidence of scurvy? Can you think of an explanation for your answer? (HINT: think of when James Lind's publication was released)\n\n*Research Question:* Does the incidence of scurvy seem to be related to height?\n\n```{webr-r}\n#ENTER YOUR CODE FOR RESEARCH QUESTION 1 VISUALIZATION HERE\n```\n\n```{webr-r}\n#WRITE YOUR ANSWER TO THE RESEARCH QUESTION 1 HERE AND SCREENSHOT\n```\n\n*Research Question:* *Does the incidence of scurvy seem to be related to age?*\n\n```{webr-r}\n#ENTER YOUR CODE FOR RESEARCH QUESTION 2 VISUALIZATION HERE\n```\n\n```{webr-r}\n#WRITE YOUR ANSWER TO THE RESEARCH QUESTION 2 HERE AND SCREENSHOT\n```\n\n*Research Question:* *Which ship had the highest incidence of scurvy? Can you think of an explanation for your answer? (HINT: think of when James Lind's publication was released)*\n\n```{webr-r}\n#ENTER YOUR CODE FOR RESEARCH QUESTION 3 VISUALIZATION HERE\n```\n\n```{webr-r}\n#WRITE YOUR ANSWER TO THE RESEARCH QUESTION 3 HERE AND SCREENSHOT\n```\n\n*Questions about implementing this tutorial? Contact Kayla Blincow at kaylamblincow\\@gmail.com*.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}