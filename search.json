[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CSC/SCI 230: Data Science 1",
    "section": "",
    "text": "Instructor: Kayla Blincow, PhD (aka Kayla Israel)\n\n\nWelcome!\nThis website houses all of the coding exercises and assignments for CSC/SCI 230 Data Science 1. All other course documentation can be found on Brightspace.\n\n\nSchedule\n\n\n\nWeek\nDates\nMaterials\n\n\n\n\n1\n8/19 - 8/23\nHomework 1\n\n\n2\n8/26 - 8/30\nHomework 2\n\n\n3\n9/3 - 9/6\nHomework 3\n\n\n4\n9/9 - 9/13\nHomework 4\n\n\n5\n9/16 - 9/20\nHomework 5\n\n\n6\n9/23 - 9/27\nHomework 6\n\n\n7\n9/30 - 10/4\nHomework 7\n\n\n8\n10/7 - 10/11\nHomework 8\n\n\n9\n10/14 - 10/18\nHomework 9\n\n\n10\n10/21 - 10/25\nHomework 10\n\n\n11\n10/28 - 10/31\nHomework 11\n\n\n12\n11/4 - 11/8\nHomework 12\n\n\n13\n11/12 - 11/15\nHomework 13\n\n\n14\n11/18 - 11/22\nHomework 14\n\n\n15\n11/25 - 11/26\nHomework 15"
  },
  {
    "objectID": "Week3HW.html",
    "href": "Week3HW.html",
    "title": "Week 3: Data Visualization Part 1",
    "section": "",
    "text": "In this tutorial, we will introduce some reasons why data visualization is a critical aspect of data science and demonstrate the basics of creating effective data visualizations in R using ggplot2.\nThe code chunk below sets up our coding environment. You will see I use the library() function to call packages. Packages are add ons you can load into R that include specialized functions. For example, ggplot2 is package with functions that allow us to make effective data visualizations.\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(dplyr) #package with useful data manipulation functions\nlibrary(ggplot2) #package allowing us to make plots\nlibrary(palmerpenguins) #package containing our data"
  },
  {
    "objectID": "Week3HW.html#why-is-data-visualization-important",
    "href": "Week3HW.html#why-is-data-visualization-important",
    "title": "Week 3: Data Visualization Part 1",
    "section": "Why is data visualization important?",
    "text": "Why is data visualization important?\nWhen we consider the data science workflow (Fig. 1), there is not a step that explicitly says “data visualization”. This is because data visualization is so essential that it occurs throughout the entire process!\n\nFigure 1. Data science life cycle. (Drawn by Chanin Nantasenamat in collaboration with Ken Jee; Source Article)\nAt its core, data visualization is used to simplify complex data. Data scientists often work with very large data sets (think millions of rows) and it is exceedingly difficult to conceptualize those data when interacting with them in table form. Using data visualization techniques, data scientists are able to:\n\nidentify (sometimes unexpected) patterns and trends in data\nidentify errors or weirdnesses in data\nestablish expectations for relationships in data to inform understanding of analysis results\ncommunicate the results of their efforts to others\n\nYour first step is ALWAYS to visualize your data!"
  },
  {
    "objectID": "Week3HW.html#data-visualization-in-r",
    "href": "Week3HW.html#data-visualization-in-r",
    "title": "Week 3: Data Visualization Part 1",
    "section": "Data visualization in R",
    "text": "Data visualization in R\nThere are a number of different tools that can aid in visualizing data in the R environment. Below is a selection of some of the tools available.\n\nggplot2: A powerful and flexible plotting package based on the grammar of graphics, allowing for the creation of complex multi-layered plots with consistent syntax.\nbase R: The default plotting system in R, offering simple and straightforward functions for plotting with basic customization options. (I often use base R plots for quick exploratory visualizations).\nplotly: An interactive graphing package that builds on ggplot2, allow users to create dynamic, web-based interactive visualizations. For example, you can have a plot display a written value when hovering over a data point.\nshiny: A web application framework for R that allows users to create interactive web apps with reactive elements, including dynamic and responsive plots. This is a common tool for creating interactive data dashboards.\n\nYou are encouraged to explore these tools and others, but for the purposes of this lab, we will be focusing on ggplot2. You can find additional information on the ggplot2 package here."
  },
  {
    "objectID": "Week3HW.html#our-data-set-palmer-penguins",
    "href": "Week3HW.html#our-data-set-palmer-penguins",
    "title": "Week 3: Data Visualization Part 1",
    "section": "Our data set: Palmer Penguins",
    "text": "Our data set: Palmer Penguins\nThe Palmer Penguins dataset includes morphometric information on three different species of penguins across three different islands in Antarctica monitored by the Palmer Station Long Term Ecological Research study area. These data were made available by Dr. Kristen Gorman and were originally published in:\n\nGorman KB, Williams TD, Fraser WR (2014). Ecological sexual dimorphism and environmental variability within a community of Antarctic penguins (genus Pygoscelis). PLoS ONE 9(3):e90081. https://doi.org/10.1371/journal.pone.0090081\n\n\nMeet the penguins!\n\nFigure 2. Palmer penguin species (artwork by @allison_horst).\n\n\nFigure 3. Depiction of morphometric bill measurements (artwork by @allison_horst).\nRun the code chunk below to load the data.\nAdd another line of code to the chunk that will output a list of all your columns, what types of variables exist in those columns, and a couple observations from each column.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou can see that there are a number of measurements in our data set, including the bill measurements, flipper length, body mass, sex, and year.\nHowever, looking at the data this way, we can’t really discern patterns that might exist. For example, which of the penguin species is the smallest by weight? Do all the species show differences in their body morphometrics with sex? Is there one island that seems to have larger penguins than another?\nBy visualizing the data we can find answers to these questions and more!"
  },
  {
    "objectID": "Week3HW.html#lets-visualize-some-data",
    "href": "Week3HW.html#lets-visualize-some-data",
    "title": "Week 3: Data Visualization Part 1",
    "section": "Let’s visualize some data!",
    "text": "Let’s visualize some data!\nIn this section we will demonstrate how to make a visualization using seaborn.\nFor this first example, each line of code includes a comment (denoted by #) that describes what that line is doing. In general, it’s good practice to go line by line in code you receive to ensure you fully understand what it’s doing.\nIn the exercise code chunks, you will be required to fill in the missing code (denoted by #FILLMEIN) to create the visualization.\n\nDemonstration:\nWe are going to start by making a plot that will show us the relationship between flipper length and body mass by species. Spend some time looking at the code and consider what you think the resulting plot will look like before running the chunk below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nDoes the resulting plot match what you expected the code to generate?\nEXERCISE 1:\nAdjust the code chunk below to create a plot that shows the relationship between bill length and flipper length by species. Screenshot your code and resulting plot for your homework submission.\n(HINT: you might want to refer back to your column names to ensure you are inputting the write variable names, and don’t forget about commas!)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nANALYSIS INTERLUDE:\nBased on your plots, do you think flipper length or bill length is better at predicting body mass? Which species do you think is the largest on average?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week3HW.html#more-ggplot2-use-cases",
    "href": "Week3HW.html#more-ggplot2-use-cases",
    "title": "Week 3: Data Visualization Part 1",
    "section": "More ggplot2 use cases",
    "text": "More ggplot2 use cases\nRun the code chunks in this section to see how visualizations can help us get answers to the listed research questions.\nResearch Question: What is the distribution of bill depth measurements?\nWe can use a histogram to plot distributions of numerical variables. Notice we only need to provide an x variable, as the histogram by default will plot the count of observations on the y axis.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe see a roughly bi-modal distribution of bill lengths across the entire data set, with peaks around 38-42 mm and 45-50 mm.\nResearch Question: How does the body mass of penguins differ across islands?\nWe can use a box plot or violin plot to look for differences across categorical variables.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nBoth of these plots show us that Biscoe Island has penguins with higher body mass on average.\n\nResearch Question: Is the relative distribution of bill length and flipper length across species conserved across both variables?\nWe can layer multiple geoms to get more insight into our data, as seen below. Also, notice we are adding an argument for “color” in the aes() call to specify we want our geom elements to be colored based on species.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat we see is that flipper length is consistently highest for Gentoo penguins, but the highest bill lengths are shared by Gentoo and Chinstrap penguins. Adelie penguins are consistently smallest for both morphometrics."
  },
  {
    "objectID": "Week3HW.html#final-exercise-your-turn",
    "href": "Week3HW.html#final-exercise-your-turn",
    "title": "Week 3: Data Visualization Part 1",
    "section": "FINAL EXERCISE: Your turn!",
    "text": "FINAL EXERCISE: Your turn!\nCreate three visualizations addressing the following research questions:\n\nWhich island has the most Gentoo penguins?\nDo males have larger body mass on average than females for all species?\nIs the relationship between bill length and bill depth the same for all species?\n\nTo receive full points for this exercise, you should provide a written answer to the each of research questions based on your visualizations. Screen shot the plot and the written answer and include it in your HW submission.\nResearch Question: Which island has the most Gentoo penguins?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nResearch Question: Do males have larger body mass on average than females for all species?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nResearch Question: Is the relationship between bill length and bill depth the same for all species?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week3HW.html#citations-and-helpful-links",
    "href": "Week3HW.html#citations-and-helpful-links",
    "title": "Week 3: Data Visualization Part 1",
    "section": "Citations And Helpful Links",
    "text": "Citations And Helpful Links\nThis lab was created University of the Virgin Islands Data Science program using ideas, information, and inspiration from the following sources:\n\nggplot2 documentation\nPalmer Penguins\nChatGPT\n\nQuestions about implementing this tutorial? Contact Kayla Blincow at kaylamblincow@gmail.com."
  },
  {
    "objectID": "Week4HW.html",
    "href": "Week4HW.html",
    "title": "Week 4 Homework",
    "section": "",
    "text": "Coming soon :)"
  },
  {
    "objectID": "Week1R4DS.html",
    "href": "Week1R4DS.html",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "In this course, you will not have to download R or RStudio, which are software tools used to implement the R coding language. Since our focus is not for you to become expert coders, but rather to expose you to the data science work flow, we are going to do all your coding in interactive tutorials like this one.\nFor this first experience, I just want you to get used to the format. This tutorial directly mirrors the R for Data Science textbook “Whole Game &gt; 2 Workflow:basics” chapter that you were assigned to read this week. As you’re reading, use this page to run the code that appears in the chapter.\nA couple vocabulary words:\n\ncode chunk: these are sections in your tutorials that contain code that is for you to view and investigate, but not necessarily run\nWebR code chunk: these are sections in your tutorials that contain an interactive code chunk that allows you to edit and run the code in the section\n\n\n\nThese are examples of code chunks:\n\n1/200 * 30\n\n[1] 0.15\n\n(59 + 73 + 2) / 3\n\n[1] 44.66667\n\nsin(pi / 2)\n\n[1] 1\n\n\nNotice the output of the code is printed below the chunk, and you are not able to edit the chunk.\nHere is an example of a WebR code chunk:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this type of code chunk, you can click in the chunk and edit what is written there. You might have noticed, nothing gets printed when you click “Run Code”. Try writing “x” on the next line and running the code to see what happens.\nLet’s try another example. In the code chunk below, add the code from the text that demonstrates basic arithmetic on vectors. Click “Run Code” and see if you get the same result.\nFYI: vectors are a type of data structure that holds elements of the same type–the primes object we create below is a vector of numeric values.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nTry adding a comment in the WebR code chunk below and running it to see what happens.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nCan you edit the names of the objects and add comments below to make the code more effective?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nTry exploring the sample() function in the WebR code chunk below.\nPro-tip: if you want to find out more about how to use a function you can type “?” in front of it to view the help information associated with it.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nTry the exercises from the text below. When you have completed them share a screenshot of your outputs for each question to get full points on your homework assignment for this week.\n\nWhy does this code not work?\nEdit the code so that it runs properly and provide a written response to the question as a comment in the WebR code chunk.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTweak each of the following R commands so that they run correctly:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe will skip this one since it’s specific to RStudio.\nLook at the following lines of code. Which of the two plots is saved as mpg-plot.png? Why?\nWrite your response as a comment in the WebR code chunk.\n\nmy_bar_plot &lt;- ggplot(mpg, aes(x = class)) +\n  geom_bar()\nmy_scatter_plot &lt;- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\nggsave(filename = \"mpg-plot.png\", plot = my_bar_plot)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week1R4DS.html#coding-basics",
    "href": "Week1R4DS.html#coding-basics",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "These are examples of code chunks:\n\n1/200 * 30\n\n[1] 0.15\n\n(59 + 73 + 2) / 3\n\n[1] 44.66667\n\nsin(pi / 2)\n\n[1] 1\n\n\nNotice the output of the code is printed below the chunk, and you are not able to edit the chunk.\nHere is an example of a WebR code chunk:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn this type of code chunk, you can click in the chunk and edit what is written there. You might have noticed, nothing gets printed when you click “Run Code”. Try writing “x” on the next line and running the code to see what happens.\nLet’s try another example. In the code chunk below, add the code from the text that demonstrates basic arithmetic on vectors. Click “Run Code” and see if you get the same result.\nFYI: vectors are a type of data structure that holds elements of the same type–the primes object we create below is a vector of numeric values.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week1R4DS.html#comments",
    "href": "Week1R4DS.html#comments",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "Try adding a comment in the WebR code chunk below and running it to see what happens.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week1R4DS.html#whats-in-a-name",
    "href": "Week1R4DS.html#whats-in-a-name",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "Can you edit the names of the objects and add comments below to make the code more effective?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week1R4DS.html#calling-functions",
    "href": "Week1R4DS.html#calling-functions",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "Try exploring the sample() function in the WebR code chunk below.\nPro-tip: if you want to find out more about how to use a function you can type “?” in front of it to view the help information associated with it.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week1R4DS.html#exercises",
    "href": "Week1R4DS.html#exercises",
    "title": "Week 1 Homework: R4DS Exercises",
    "section": "",
    "text": "Try the exercises from the text below. When you have completed them share a screenshot of your outputs for each question to get full points on your homework assignment for this week.\n\nWhy does this code not work?\nEdit the code so that it runs properly and provide a written response to the question as a comment in the WebR code chunk.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTweak each of the following R commands so that they run correctly:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe will skip this one since it’s specific to RStudio.\nLook at the following lines of code. Which of the two plots is saved as mpg-plot.png? Why?\nWrite your response as a comment in the WebR code chunk.\n\nmy_bar_plot &lt;- ggplot(mpg, aes(x = class)) +\n  geom_bar()\nmy_scatter_plot &lt;- ggplot(mpg, aes(x = cty, y = hwy)) +\n  geom_point()\nggsave(filename = \"mpg-plot.png\", plot = my_bar_plot)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Course Description\nDATA SCIENCE I. Data Science I provides students with an introduction to the concepts and basic skills needed to understand the role of data in today’s world. The course explores the emergence of the field using the data science workflow as the unifying framework to illustrate the importance of each stage of the workflow, how it contributes to the final report, and how that new information is used. Topics include applications of data science; data ethics; data preparation; data stewardship; analysis, evaluation, communicating results, and best practices. The trade-offs among tools, algorithms, and visualizations are discussed using both effective and ineffective examples. This is a hands-on course, students work with datasets in a peer-peer and near-peer groups.\nPrerequisites: MAT 140 or MAT 143.\n\nContact\nKayla Blincow: kayla.israel@uvi.edu"
  },
  {
    "objectID": "Week2HW.html",
    "href": "Week2HW.html",
    "title": "Week 2 Homework: Asking Questions",
    "section": "",
    "text": "To receive full points on this homework, please submit a document containing all of the requested screenshots on Brightspace. You should also make sure to run all the code chunks in this document for the tutorial to run properly."
  },
  {
    "objectID": "Week2HW.html#getting-started",
    "href": "Week2HW.html#getting-started",
    "title": "Week 2 Homework: Asking Questions",
    "section": "Getting started",
    "text": "Getting started\nFirst things first, we load our data set and take a look at it. I am only going to show you some of the ways you can explore this data set, then provide you with a written summary. In reality, you would spend a lot of time taking a look at each column and familiarizing yourself with what the data entail.\nMAKE SURE TO RUN ALL CODE CHUNKS.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNOTE: the lubridate package (an R add-on) has this data set pre-loaded in it, which is why the above code works. We are using the assignment arrow “&lt;-” to create an object “lakers” that is the lubridate lakers data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNOTE: It’s a good idea to make note of what form the data takes in each column. In this case, all columns are character strings  or integers . This is important because we might not want them to take that form. For example, the “date” column is currently an integer, but if we were to work with it, we might want it to be recognized as an actual date. We will spend more time working on dealing with issues like this later in the semester.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNOTE: the “$” operator allows us to select a column within a dataframe. In the above code chunk, we used the unique() function on the etype column by typing lakers$etype. The line of code says look in the lakers dataframe for the etype column and give us a list of the unique values present in that column.\nWe see that our data includes game logs from the entire season with the following variables (variables we will be actively using in this tutorial are bolded):\n\ndate: Date of the game\nopponent: Three letter code for the opponent team the Lakers played against\ngame_type: Whether the game was home or away\ntime: The time on the game clock when the play was recorded (i.e. time left in the quarter)\nperiod: Quarter of the game (1, 2, 3, 4, 5), with 5 representing overtime\netype: Type of play recorded\nteam: The team that made the play\nplayer: The player that made the play\nresult: The result of the play - blank for non-shots, “missed” or “made” for shots\npoints: Number of points the play resulted in\ntype: Type of play - type of foul for fouls, type of shot for shots, type of rebound for rebounds\nx: The location along the x plane (court width) of the play (shots only)\ny: The location along the y plane (court length) of the play (shots only)"
  },
  {
    "objectID": "Week2HW.html#question-1-who-committed-the-most-turnovers",
    "href": "Week2HW.html#question-1-who-committed-the-most-turnovers",
    "title": "Week 2 Homework: Asking Questions",
    "section": "Question 1: Who committed the most turnovers?",
    "text": "Question 1: Who committed the most turnovers?\nFor this first question, I will walk you through how to find the answer, showing you some important data wrangling tools along the way. We will spend A LOT more time exploring these tools in future weeks, so don’t worry too much if you don’t follow all the code.\n\nWhich players committed the most turnovers?\n\nTo answer this, we first need to do some data filtering. We are only interested in plays made by the Lakers, so we need to filter the data to only include “LAL” observations in the “team” column.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn the above code chunk, I introduced a new coding operator, the pipe, denoted by “%&gt;%” or “|&gt;”. You can imagine this translating to “and then”. We are creating a new object called lakersQ1. To create this object we take the lakers data “and then” we filter it so that the “team” column only includes “LAL”. We use == when filtering (not =). NOTE: we are using the dplyr package filter() function, not the base R filter() function.\nNow that we have done that, we need to determine which players committed the most turnovers by keeping only observations associated with turnovers. We can again accomplish this using filtering.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNOTE: when we use the assignment arrow (&lt;-) with the same object name as the one we made previously (“lakersQ1”), we are overwriting our original lakersQ1 object and creating a new one.\nNow we can create a visualization to see who committed the most turnovers. Again, we will be spending a lot more time working through how to make visualizations, so don’t worry too much about the code. Focus more on interpreting the output.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe see that Kobe Bryant, Pau Gasol, and Lamar Odom committed the most turnovers across the season. Assuming you know nothing about basketball, I will tell you that these are three of the biggest stars on this championship team. This means they probably got waayyyy more playing time than the other players, giving them more opportunity to commit a turnover in the first place. This is an important lesson for multiple reasons:\n\nYou should always evaluate your results to see if they make sense in the context of the bigger picture. Kobe Bryant is one of the greatest NBA players of all time and played with the Lakers his entire 20 year career. If we were using this as a metric for deciding who gets traded, we probably haven’t found a very good metric. But then again, even Kobe has room for improvement… 200 seems like a lot, and he could use this information to focus his efforts on reducing turnovers.\nSometimes folks you are working with think they want the answer to one question (who committed the most turnovers?), but what they really want is the answer to a different question (who committed the most turnovers accounting for how often they played?).\n\nWhat’s something we could do to make this a fairer picture of turnover rates?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week2HW.html#question-2-which-players-missed-the-most-free-throws",
    "href": "Week2HW.html#question-2-which-players-missed-the-most-free-throws",
    "title": "Week 2 Homework: Asking Questions",
    "section": "Question 2: Which players missed the most free throws?",
    "text": "Question 2: Which players missed the most free throws?\nLet’s move on to the second question.\n\nWhich players missed the most free throws?\n\nFirst thing we have to do is again pull only data related to observations of plays commited by the Lakers (not their opponents).\nAdjust the following code chunk so that you create an object called “lakersQ2” that filters for only plays made by the Lakers. (HINT: Look back at how we tackled this task in the first question.)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow we need to filter so we only have data associated with free throws.\nAdjust the following code to accomplish that task. (HINT: Look at how we filtered to only have observations of turnovers in the first question.)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nFinally, we also need to filter so we are only looking at missed free throws.\nAdjust the code chunk below to do the final filtering so we are looking at data on free throws missed by the Lakers.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAssuming you completed the three code chunks above correctly, this following code chunk should generate a bar plot of the number of missed free throws for each player.\nTake a screenshot of the resulting plot and include it in your homework response.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhich players missed the most free throws? Is there anything you would change about this question/analysis to get a fairer picture of free throw percentages?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week2HW.html#question-3-who-performed-highest-against-the-best-opposing-teams",
    "href": "Week2HW.html#question-3-who-performed-highest-against-the-best-opposing-teams",
    "title": "Week 2 Homework: Asking Questions",
    "section": "Question 3: Who performed highest against the best opposing teams?",
    "text": "Question 3: Who performed highest against the best opposing teams?\nMoving on to our final question!\n\nLast season, the Boston Celtics and the Cleveland Cavaliers had higher W/L percentages than the Lakers. Which players performed the best against these teams in terms of attempted shots? Rebounds? Assists?\n\nWe will again rely on filtering to find the answer.\nFirst, let’s filter so the data only include games played against the Celtics and the Cavs. I’ll do this one for you, just make sure to run the code chunk below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIn the above chunk, I used the “|” operator. When filtering, this symbol, |, means “or”. In the second line of code we are saying we only want observations where the opponent column is “CLE” (for the Cavs) OR “BOS” (for the Celtics). We will learn more about these types of operators later in the semester.\nNow that we have only the games we are interested in, let’s filter so we only have observations of plays made by the Lakers. Fill out the code chunk below to accomplish that task.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nLet’s start with who had the most attempted shots?\nUse the code chunk below to filter for shots in the etype column. Call the new object lakersQ3_shots.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAssuming you completed the code chunk above correctly, the following chunk should generate a plot telling you who took the most shots against the Celtics and Cavs last season.\nTake a screenshot of the resulting plot and include it in your HW response.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow let’s do the same thing to see who had the most rebounds.\nUse the code chunk below to filter for rebounds in the etype column from the lakersQ3 object. Call the new object lakersQ3_rbs.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAssuming you completed the code chunk above correctly, the following chunk should generate a plot telling you who got the most rebounds against the Celtics and Cavs last season.\nTake a screenshot of the resulting plot and include it in your HW response.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNow, can we accomplish the same task for assists?\nUse the code chunk below to filter for assists in the etype column.\n(HINT: you might want to take a look at the available options in the etype column using the unique() function, similar to what we did in the “Getting started” section.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "Week2HW.html#concluding-remarks",
    "href": "Week2HW.html#concluding-remarks",
    "title": "Week 2 Homework: Asking Questions",
    "section": "Concluding remarks",
    "text": "Concluding remarks\nObviously, I intentionally made this is a very simplified example, as we are just starting to get our feet wet in terms of coding in R, but these types of analyses actually go on behind the scenes for most sports teams.\nBased on our very limited analysis what would your recommendations be to the Lakers coach and manager regarding what to focus on for next season?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThere are much more complicated questions we could ask and analyses we could perform with these data as well. We stuck with questions directly related to the variables present, but we can also take these data another step using data manipulation and analysis tools. Even though the active court lineup is not provided, we could deduce which players were on the court at certain times and ask something like which lineup led to the most points scored? Or which lineup led to the most missed shots by the other team? We could also try predicting outcomes using these data. What is the probability of the Lakers winning a game given the number of minutes Kobe Bryant plays in the first half? How about given the number of consecutive away games they’ve played?\nWhat is another more complex question you could answer using these data?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAs we move through this semester, we will try to build your coding skills so that you can start trying to address these types of more complex data science questions on your own. We might even revisit this data set later in the semester to see if we can implement the tools you’ve learned to ask more complex questions."
  },
  {
    "objectID": "part_1_prep.html",
    "href": "part_1_prep.html",
    "title": "Preparation",
    "section": "",
    "text": "Page without code\n\n\n\nThis page contains an example for some structured preparation information for a workshop. No code is executed here.\nHere are some preparation information for the participants."
  },
  {
    "objectID": "part_1_prep.html#software",
    "href": "part_1_prep.html#software",
    "title": "Preparation",
    "section": "Software",
    "text": "Software\nIn this workshop we will be using R. You can either\n\nhave R and Rstudio installed on your laptop\nor, use Posit cloud (formerly Rstudio Cloud).\n\nPosit cloud is free of charge for personal users, yet you need to sign up for a new user account and have internet connection.\nThe R package we are using is glmnet."
  },
  {
    "objectID": "part_1_prep.html#data",
    "href": "part_1_prep.html#data",
    "title": "Preparation",
    "section": "Data",
    "text": "Data\nThe datasets we use can be found here (insert link)."
  },
  {
    "objectID": "part_1_prep.html#code",
    "href": "part_1_prep.html#code",
    "title": "Preparation",
    "section": "Code",
    "text": "Code\nThe R scripts used in part 1 and part 2 can be found here (insert link)."
  },
  {
    "objectID": "part_1_prep.html#resources",
    "href": "part_1_prep.html#resources",
    "title": "Preparation",
    "section": "Resources",
    "text": "Resources\nLecture notes (insert link)\nLab notes (insert link)"
  },
  {
    "objectID": "part_2_eda.html",
    "href": "part_2_eda.html",
    "title": "Part I",
    "section": "",
    "text": "Page with R code\n\n\n\nThis page contains an example template for a lab session, where R code and results are displayed here.\nYou can find more information on how to include code in Quarto website here.\nYou can experiment with code-fold and code-tools in the yaml header above to change how the code cells look like."
  },
  {
    "objectID": "part_2_eda.html#a-cancer-modeling-example",
    "href": "part_2_eda.html#a-cancer-modeling-example",
    "title": "Part I",
    "section": "A Cancer Modeling Example",
    "text": "A Cancer Modeling Example\nExercise on analysis of miRNA, mRNA and protein data from the paper Aure et al, Integrated analysis reveals microRNA networks coordinately expressed with key proteins in breast cancer, Genome Medicine, 2015.\nPlease run the code provided to replicate some of the analyses. Make sure you can explain what all the analysis steps do and that you understand all the results.\nIn addition, there are some extra tasks (Task 1), where no R code is provided. Please do these tasks when you have time available at the end of the lab.\n\nLoad the data\nRead the data, and convert to matrix format.\n\nmrna &lt;- read.table(\"data/data_example.txt\", header=T, sep=\"\\t\", dec=\".\")\n\n# Convert to matrix format\n\nmrna &lt;- as.matrix(mrna)\n\nPrint the data\n\nmrna[1:4, 1:4]\n\n      OSL2R.3002T4 OSL2R.3005T1 OSL2R.3013T1 OSL2R.3030T2\nACACA      1.60034     -0.49087     -0.26553     -0.27857\nANXA1     -2.42501     -0.05416     -0.46478     -2.18393\nAR         0.39615     -0.43348     -0.10232      0.58299\nBAK1       0.78627      0.39897      0.22598     -1.31202\n\n\nVisualise the overall distribution of expression levels by histogram\n\nhist(mrna, nclass=40, xlim=c(-5,5), col=\"lightblue\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTask 1\n\n\n\nThis is a callout-note, and it can be quite useful for exercises. You can find more about callout here.\nExample: Extend the above analysis to cover all genes."
  }
]