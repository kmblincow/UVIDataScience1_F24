---
title: "Week 1 Homework: R4DS Exercises"
webr:
  channel-type: 'automatic'
  packages: ["ggplot2", "dplyr"]
filters:
  - webr
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
```

# Let's Try Coding!

In this course, you will not have to download R or RStudio, which are software tools used to implement the R coding language. Since our focus is not for you to become expert coders, but rather to expose you to the data science work flow, we are going to do all your coding in interactive tutorials like this one.

For this first experience, I just want you to get used to the format. This tutorial directly mirrors the R for Data Science textbook "Whole Game \> 2 Workflow:basics" chapter that you were assigned to read this week. As you're reading, use this page to run the code that appears in the chapter.

A couple vocabulary words:

-   **code chunk**: these are sections in your tutorials that contain code that is for you to view and investigate, but not necessarily run

-   **WebR code chunk**: these are sections in your tutorials that contain an interactive code chunk that allows you to edit and run the code in the section

## 2.1 Coding Basics

These are examples of code chunks:

```{r}
1/200 * 30
(59 + 73 + 2) / 3
sin(pi / 2)
```

Notice the output of the code is printed below the chunk, and you are not able to edit the chunk.

Here is an example of a WebR code chunk:

```{webr-r}
x <- 3 * 4
```

In this type of code chunk, you can click in the chunk and edit what is written there. You might have noticed, nothing gets printed when you click "Run Code". Try writing "x" on the next line and running the code to see what happens.

Let's try another example. In the code chunk below, add the code from the text that demonstrates basic arithmetic on vectors. Click "Run Code" and see if you get the same result.

*FYI: vectors are a type of data structure that holds elements of the same type–the primes object we create below is a vector of numeric values.*

```{webr-r}
primes <- c(2, 3, 5, 7, 11, 13)
```

## 2.2 Comments

Try adding a comment in the WebR code chunk below and running it to see what happens.

```{webr-r}
5000*900
```

## 2.3 What's in a name?

Can you edit the names of the objects and add comments below to make the code more effective?

```{webr-r}
this_is_just_a_random_number_DrB_generated <- sample(1:100, 1)
this_is_just_a_random_number_DrB_generated

green <- "purple"
```

## 2.4 Calling Functions

Try exploring the sample() function in the WebR code chunk below.

*Pro-tip: if you want to find out more about how to use a function you can type "?" in front of it to view the help information associated with it.*

```{webr-r}
#sample draws random numbers from a provided vector
#draw 15 values randomly from the range 1 to 50 with replacement
sample(1:50, 15, replace =  TRUE)

```

## 2.5 Exercises

Try the exercises from the text below. When you have completed them share a screenshot of your outputs for each questions to get full points on your homework assignment for this week.

1.  Why does this code not work?

    *Edit the code so that it runs properly and provide a written response to the question as a comment in the WebR code chunk.*

    ```{webr-r}
    my_variable <- 10
    my_varıable
    #REPLACE THIS COMMENT WITH YOUR WRITTEN ANSWER.
    ```

2.  Tweak each of the following R commands so that they run correctly:

    ```{webr-r}
    libary(todyverse)

    ggplot(dTA = mpg) + 
      geom_point(maping = aes(x = displ y = hwy)) +
      geom_smooth(method = "lm)
    ```

3.  *We will skip this one since it's specific to RStudio.*

4.  Look at the following lines of code. Which of the two plots is saved as `mpg-plot.png`? Why?

    *Write your response as a comment in the WebR code chunk.*

    ```{r, eval = F}
    my_bar_plot <- ggplot(mpg, aes(x = class)) +
      geom_bar()
    my_scatter_plot <- ggplot(mpg, aes(x = cty, y = hwy)) +
      geom_point()
    ggsave(filename = "mpg-plot.png", plot = my_bar_plot)
    ```

    ```{webr-r}
    #WRITE YOUR RESPONSE HERE

    ```
